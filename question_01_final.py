# -*- coding: utf-8 -*-
"""Question-01-Final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15ImqjgriJEFbA0fXWnfmd3sEOHE3-7zb
"""

!pip install pyinputplus             #Installs PyinputPLus

#Calculating Carbon Footprint Using Electricty,fuel and Gas consumption in a Household


import pyinputplus as pyp
import numpy as npy
import pandas as pnd
import matplotlib.pyplot as plt



######################################################################################################################
class EmployeeLogin:
  def __init__(self,Name,Department,EmplyNum):
   self.Name = Name
   self.Department = Department
   self.EmplyNum = EmplyNum


Name = pyp.inputStr("Please Enter your Name")
Department = pyp.inputStr("Please Enter your Department")
EmplyNum = pyp.inputStr("Please Enter EmplyNum")

info = EmployeeLogin(Name,Department,EmplyNum)
print("The logged in Employee Name is",info.Name)
print("The Department of the Employee",Name,"is",info.Department)
print("The Employee Id of logged in Employee",Name,"is",info.EmplyNum)


#######################################################################################################################
print("Please Enter Monthly Electricity Bill (EURO)")
Elec_Bill = []                     #Open Array with User Input for Electricty Bill With respect to Month
months = ['January','Febuary','March','April','May','June','July','August','September','October','November','December']

for i in months:                   #For loop appends the User Input with respect to Month

    bill = pyp.inputFloat(i)
    Elec_Bill.append(bill)

print("The Following are the Electricity Bill by Month " ,Elec_Bill)

a = 12*0.005
Elec_Carbon = [x * a for x in Elec_Bill]               # Finds the Carbon Generated by Electricity Consumption

Elec_Carbon_1 = npy.around(Elec_Carbon,2)

print("The following is the Carbon generated by Elec Consumption",Elec_Carbon_1)

########################################################################################################################
print("Please Enter Monthly Gas Bill (EURO)")
Gas_Bill = []                                        #Open Array with User Input for Monthly Gas Bill with respect to Month
months = ['January','Febuary','March','April','May','June','July','August','September','October','November','December']

for i in months:

  bill = pyp.inputFloat(i)
  Gas_Bill.append(bill)

print("The Following are the Gas Bill by Month " ,Gas_Bill)

b = 12*0.0053
Gas_Carbon = [x * b for x in Gas_Bill]
Gas_Carbon_1 = npy.around(Gas_Carbon,2)

print(Gas_Carbon_1)

#######################################################################################################################
print("Please Enter Monthly Fuel Bill (EURO)")
Fuel_Bill = []                                     #Open Array with Input from User for Monthly Fuel Bill
months = ['January','Febuary','March','April','May','June','July','August','September','October','November','December']

for i in months:

  bill = pyp.inputFloat(i)
  Fuel_Bill.append(bill)

print("The Following are the Fuel Bill by Month " ,Fuel_Bill)

c = 12*2.32
Fuel_Carbon = [x * c for x in Fuel_Bill]

Fuel_Carbon_1 = npy.around(Fuel_Carbon,2)

print(Fuel_Carbon_1)


Total_Carbon = Elec_Carbon_1 + Gas_Carbon_1 + Fuel_Carbon_1       # Adds Up Carbon Generated

print(Total_Carbon)                                               #Displays total of all the Carbon Generated
######################################################################################################################

#Panda Library to tabulate the results with respective Title

Month = ['Jan','Feb','Mrch','Aprl','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec']

table = {'Month':['Jan','Feb','Mrch','Aprl','May','Jun','Jul','Aug','Sept','Oct','Nov','Dec'],
         'Elec Carbon(KgCO2)':Elec_Carbon_1,
         'Gas Carbon(KgCO2)':Gas_Carbon_1,
         'Fuel Carbon(KgCO2)':Fuel_Carbon_1,
         'Total(KgCO2)':Total_Carbon
         }
df=pnd.DataFrame(table)
print(df)

#df.plot(x='Month',y='Total(KgCO2)', kind='bar')

######################################################################################################################

# Plotting the DataSet

# Month VS Carbon (KgC02)

plt.figure("Month  Carbon (KgC02) ",figsize=[12,4])
plt.title("Month - Total Carbon (KGC02)")
plt.xlabel('Month')
plt.ylabel('Total Carbon (KGC02)')
plt.plot(months,Total_Carbon,color='blue')
plt.show()

########################################################################################
# Plotting the DataSet

# Month VS Elec_Carbon (KgC02)

plt.figure("Month - Elec Carbon (KGC02) ",figsize=[12,4])
plt.title("Month - Elec Carbon(KGC02)")
plt.xlabel('Month')
plt.ylabel('Electricity Carbon (KGC02)')
plt.plot(months,Elec_Carbon_1,color='blue')
plt.show()

#######################################################################################
# Plotting the DataSet

# Month VS Gas_Carbon (KgC02)

plt.figure("Month - Gas Carbon (KgC02) ",figsize=[12,4])
plt.title("Month - Gas Carbon (KGC02) ")
plt.xlabel('Month')
plt.ylabel('Gas Carbon (KGC02)')
plt.plot(months,Gas_Carbon_1,color='blue')
plt.show()

######################################################################################
# Plotting the DataSet

# Month VS Fuel_Carbon (KgC02)

plt.figure("Month - Fuel Carbon (KGC02)",figsize=[12,4])
plt.title("Month - Fuel Carbon (KGC02)")
plt.xlabel('Month')
plt.ylabel('Fuel Carbon (KGC02)')
plt.plot(months,Fuel_Carbon_1,color='blue')
plt.show()

#######################################################################################
df.to_excel("Question01.xlsx")              #Transfer the Data set to a Excel Sheet